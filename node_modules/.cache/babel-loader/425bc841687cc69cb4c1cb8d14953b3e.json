{"ast":null,"code":"import _defineProperty from \"E:\\\\Academics\\\\FSE\\\\JK\\\\application-ui-master\\\\application-ui-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:\\\\Academics\\\\FSE\\\\JK\\\\application-ui-master\\\\application-ui-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"E:\\\\Academics\\\\FSE\\\\JK\\\\application-ui-master\\\\application-ui-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Academics\\\\FSE\\\\JK\\\\application-ui-master\\\\application-ui-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Academics\\\\FSE\\\\JK\\\\application-ui-master\\\\application-ui-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Academics\\\\FSE\\\\JK\\\\application-ui-master\\\\application-ui-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Academics\\\\FSE\\\\JK\\\\application-ui-master\\\\application-ui-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Academics\\\\FSE\\\\JK\\\\application-ui-master\\\\application-ui-master\\\\src\\\\assets\\\\components\\\\task\\\\AddTask.jsx\";\nimport React, { Component } from 'react';\nimport './Task.css';\nimport { Button, Form, FormGroup, Label, Input, Col, Modal, ModalHeader, ModalBody, Row, ModalFooter, Spinner, Alert, ListGroup, ListGroupItem } from 'reactstrap';\nimport request from 'request';\nimport { format, addDays, differenceInCalendarDays } from 'date-fns';\n\nvar AddTask =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddTask, _Component);\n\n  function AddTask(props) {\n    var _this;\n\n    _classCallCheck(this, AddTask);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddTask).call(this, props));\n    var currentDate = format(new Date(), 'YYYY-MM-DD');\n    var nextDate = format(addDays(new Date(), 1), 'YYYY-MM-DD');\n    var labels = {\n      'addTask': 'Add Task',\n      'editTask': 'Edit Task'\n    };\n    _this.state = {\n      taskList: props.taskList || [],\n      projectsList: props.projectsList || [],\n      userAction: props.userAction || 'addTask',\n      userList: props.userList || [],\n      parentTaskList: props.parentTaskList || [],\n      projectName: '',\n      priority: 0,\n      currentTask: {},\n      projectModal: false,\n      userModal: false,\n      taskModal: false,\n      formError: false,\n      parentTask: {},\n      labels: labels,\n      currentDate: currentDate,\n      nextDate: nextDate,\n      showLoadingModal: false,\n      user: {}\n    };\n    return _this;\n  }\n\n  _createClass(AddTask, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      console.log(\"Next set of props\");\n      console.log(props);\n      var currentTask = props.currentTask;\n      var additionalProps = {};\n\n      if (currentTask) {\n        additionalProps = {\n          id: currentTask.id || '',\n          projectName: currentTask.projectName || '',\n          projectId: currentTask.projectId,\n          taskName: currentTask.task,\n          priority: currentTask.priority,\n          isParentTask: currentTask.isParentTask,\n          parentTask: currentTask.parentTask,\n          startDate: currentTask.startDate || '',\n          endDate: currentTask.endDate || '',\n          user: {\n            'firstName': currentTask.userName\n          }\n        };\n      }\n\n      this.setState(_objectSpread({\n        userList: props.userList,\n        taskList: props.taskList,\n        projectsList: props.projectsList,\n        parentTaskList: props.parentTaskList,\n        userAction: props.userAction || 'addTask'\n      }, additionalProps));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"form-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.state.formError && React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"All Fields are required!\"))), this.state.endDateValidationError && React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"End date cannot be earlier or same as start date\"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"projectName\",\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Project:\"), React.createElement(Col, {\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        value: this.state.projectName,\n        disabled: true,\n        invalid: this.state.projectNameInvalid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick(e) {\n          return _this2.toggleProjectModal(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Search\"), React.createElement(Modal, {\n        id: \"projectModal\",\n        isOpen: this.state.projectModal,\n        toggle: function toggle() {\n          return _this2.toggleProjectModal();\n        },\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: function toggle() {\n          return _this2.toggleProjectModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Select Project\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.state.projectsList && this.state.projectsList.length > 0 ? this.state.projectsList.map(function (project) {\n        return React.createElement(ListGroupItem, {\n          tag: \"button\",\n          action: true,\n          onClick: function onClick() {\n            return _this2.assignProject(project);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, project.projectName);\n      }) : React.createElement(ListGroupItem, {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Please add users to add/update projects\"))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.toggleProjectModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Cancel\"))))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"startEnd\",\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Task: \"), React.createElement(Col, {\n        sm: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        value: this.state.taskName,\n        onFocus: function onFocus(e) {\n          return _this2.focus(\"taskName\", e);\n        },\n        invalid: this.state.taskNameInvalid,\n        onChange: function onChange(e) {\n          return _this2.handleChange(\"taskName\", e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"startEnd\",\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Is Parent Task: \"), React.createElement(Col, {\n        sm: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"checkbox\",\n        checked: this.state.isParentTask,\n        onChange: function onChange(e) {\n          return _this2.parentTaskSelector(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), ' ', \"Parent Task\"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"priority\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Priority:\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"range\",\n        min: \"1\",\n        max: \"30\",\n        invalid: this.state.priorityInvalid,\n        value: this.state.priority,\n        class: \"slider\",\n        onFocus: function onFocus(e) {\n          return _this2.focus(\"priority\", e);\n        },\n        onChange: function onChange(e) {\n          return _this2.onPriorityChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"parentTask\",\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Parent Task:\"), React.createElement(Col, {\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        value: this.state.parentTaskName,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick(e) {\n          return _this2.toggleTaskModal(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Search\"), React.createElement(Modal, {\n        id: \"taskModal\",\n        isOpen: this.state.taskModal,\n        toggle: function toggle() {\n          return _this2.toggleTaskModal();\n        },\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: function toggle() {\n          return _this2.toggleTaskModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Select Parent Task\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, this.state.parentTaskList && this.state.parentTaskList.length > 0 ? this.state.parentTaskList.map(function (task) {\n        return React.createElement(ListGroupItem, {\n          tag: \"button\",\n          action: true,\n          onClick: function onClick() {\n            return _this2.assignTask(task);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, task.parentTask);\n      }) : React.createElement(ListGroupItem, {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Please add Tasks\"))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.toggleTaskModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Cancel\"))))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"startDate\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Start Date:\"), React.createElement(Col, {\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"date\",\n        name: \"startDate\",\n        id: \"startDate\",\n        placeholder: \"Start Date\",\n        disabled: this.state.isParentTask,\n        invalid: this.state.startDateInvalid,\n        min: this.state.currentDate,\n        value: this.state.startDate,\n        onFocus: function onFocus(e) {\n          return _this2.focus(\"startDate\", e);\n        },\n        onChange: function onChange(e) {\n          return _this2.handleChange(\"startDate\", e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })), React.createElement(Label, {\n        for: \"endDate\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"End Date:\"), React.createElement(Col, {\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"date\",\n        name: \"endData\",\n        id: \"endData\",\n        placeholder: \"End Date\",\n        disabled: this.state.isParentTask,\n        invalid: this.state.endDateInvalid,\n        min: this.state.nextDate,\n        value: this.state.endDate,\n        onFocus: function onFocus(e) {\n          return _this2.focus(\"endDate\", e);\n        },\n        onChange: function onChange(e) {\n          return _this2.handleChange(\"endDate\", e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"user\",\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"User:\"), React.createElement(Col, {\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        value: this.state.user.firstName,\n        invalid: this.state.userIdInvalid,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick(e) {\n          return _this2.toggleUserModal(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Search\"), React.createElement(Modal, {\n        id: \"userModal\",\n        isOpen: this.state.userModal,\n        toggle: function toggle() {\n          return _this2.toggleUserModal();\n        },\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: function toggle() {\n          return _this2.toggleUserModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Select User\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, this.state.userList && this.state.userList.length > 0 ? this.state.userList.map(function (user) {\n        return React.createElement(ListGroupItem, {\n          tag: \"button\",\n          action: true,\n          onClick: function onClick() {\n            return _this2.assignUser(user);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, user.firstName + ' ' + user.lastName);\n      }) : React.createElement(ListGroupItem, {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Please add Tasks\"))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.toggleUserModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Cancel\"))))), React.createElement(FormGroup, {\n        check: true,\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: 12,\n          offset: 9\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick(e) {\n          return _this2.addOrEditTask(e, _this2.state.userAction);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, this.state.labels[this.state.userAction]), ' ', React.createElement(Button, {\n        className: \"secondary\",\n        onClick: function onClick(e) {\n          return _this2.reset(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Reset\")))), React.createElement(Modal, {\n        isOpen: this.state.showLoadingModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        color: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"Saving user action. Please wait...\")))));\n    }\n  }, {\n    key: \"focus\",\n    value: function focus(name) {\n      var prop = name + \"Invalid\";\n      this.setState(_defineProperty({}, prop, false));\n\n      if (name == 'endDate') {\n        this.setState({\n          endDateValidationError: false\n        });\n      }\n    }\n  }, {\n    key: \"parentTaskSelector\",\n    value: function parentTaskSelector() {\n      var prevState = this.state.isParentTask;\n      this.setState({\n        isParentTask: !prevState\n      });\n      var currentDate = this.state.currentDate;\n      var nextDate = this.state.nextDate;\n\n      if (prevState) {\n        this.setState({\n          startDate: currentDate,\n          endDate: nextDate\n        });\n      }\n    }\n  }, {\n    key: \"assignUser\",\n    value: function assignUser(user) {\n      this.setState(function (prevState) {\n        return {\n          user: user,\n          userModal: !prevState.userModal,\n          userIdInvalid: false\n        };\n      });\n    }\n  }, {\n    key: \"assignProject\",\n    value: function assignProject(project) {\n      this.setState(function (prevState) {\n        return {\n          projectId: project.id,\n          projectName: project.projectName,\n          projectModal: !prevState.projectModal,\n          projectNameInvalid: false\n        };\n      });\n    }\n  }, {\n    key: \"assignTask\",\n    value: function assignTask(task) {\n      this.setState(function (prevState) {\n        return {\n          parentTask: task,\n          parentTaskId: task.id,\n          parentTaskName: task.parentTask,\n          taskModal: !prevState.taskModal,\n          taskNameInvalid: false\n        };\n      });\n    }\n  }, {\n    key: \"toggleTaskModal\",\n    value: function toggleTaskModal() {\n      this.setState(function (prevState) {\n        return {\n          taskModal: !prevState.taskModal\n        };\n      });\n    }\n  }, {\n    key: \"toggleProjectModal\",\n    value: function toggleProjectModal() {\n      this.setState(function (prevState) {\n        return {\n          projectModal: !prevState.projectModal\n        };\n      });\n    }\n  }, {\n    key: \"toggleUserModal\",\n    value: function toggleUserModal() {\n      this.setState(function (prevState) {\n        return {\n          userModal: !prevState.userModal\n        };\n      });\n    }\n  }, {\n    key: \"onPriorityChange\",\n    value: function onPriorityChange(e) {\n      this.setState({\n        priority: e.target.value\n      });\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(e) {\n      var _this$setState2;\n\n      this.setState((_this$setState2 = {\n        projectName: '',\n        taskName: '',\n        priority: 0,\n        isParentTask: false,\n        parentTask: {},\n        startDate: '',\n        endDate: '',\n        formError: false,\n        user: {\n          firstName: ''\n        },\n        parentTaskName: '',\n        projectIdInvalid: false,\n        taskNameInvalid: false,\n        priorityInvalid: false\n      }, _defineProperty(_this$setState2, \"formError\", false), _defineProperty(_this$setState2, \"endDateValidationError\", false), _defineProperty(_this$setState2, \"startDateInvalid\", false), _defineProperty(_this$setState2, \"endDateInvalid\", false), _defineProperty(_this$setState2, \"userIdInvalid\", false), _this$setState2));\n    }\n  }, {\n    key: \"addOrEditTask\",\n    value: function addOrEditTask(e, userAction) {\n      console.log(e);\n      console.log(userAction);\n\n      if (this.validateForm()) {\n        return;\n      }\n\n      var task = {\n        projectId: this.state.projectId,\n        task: this.state.taskName,\n        priority: this.state.priority,\n        isParentTask: this.state.isParentTask,\n        parentId: this.state.parentTaskId,\n        startDate: this.state.startDate,\n        endDate: this.state.endDate,\n        userId: this.state.user.id\n      };\n\n      if (userAction === 'addTask') {\n        task.id = null; // Will get added in server side\n\n        task.status = \"New\";\n      }\n\n      if (task.isParentTask) {\n        task.parentId = null; // Will get added in server side\n      }\n\n      var dis = this;\n      this.setState({\n        showLoadingModal: true\n      });\n      request.post({\n        url: 'http://localhost:3000/spi/task/addUpdate',\n        json: task\n      }, function (err, httpResponse, body) {\n        console.log(body);\n        dis.setState({\n          taskList: body,\n          addUserResponse: {\n            status: 'success'\n          },\n          currentUser: {},\n          userAction: 'addTask',\n          showLoadingModal: false\n        });\n        dis.props.addOrEditTask(userAction, body);\n      }); // TODO - validation\n\n      console.log(task);\n      this.reset();\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      var formError = false;\n      var projectId = this.state.projectId;\n      var taskName = this.state.taskName;\n      var priority = this.state.priority;\n      var isParentTask = this.state.isParentTask;\n      var parentTaskId = this.state.parentTaskId;\n      var startDate = this.state.startDate;\n      var endDate = this.state.endDate;\n      var userId = this.state.user.id;\n\n      if (!projectId || !taskName || !priority) {\n        formError = true;\n        this.setState({\n          formError: formError,\n          projectIdInvalid: projectId ? false : true,\n          taskNameInvalid: taskName ? false : true,\n          priorityInvalid: priority ? false : true\n        });\n      }\n\n      if (!isParentTask) {\n        if (!startDate || !endDate || !userId) {\n          formError = true;\n          this.setState({\n            formError: formError,\n            startDateInvalid: startDate ? false : true,\n            endDateInvalid: endDate ? false : true,\n            userIdInvalid: userId ? false : true\n          });\n        } else if (startDate && endDate) {\n          if (differenceInCalendarDays(endDate, startDate) < 1) {\n            formError = true;\n            this.setState({\n              endDateValidationError: true\n            });\n          }\n        }\n      }\n\n      return formError;\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(name, e) {\n      this.setState(_defineProperty({}, name, e.target.value));\n    }\n  }]);\n\n  return AddTask;\n}(Component);\n\nexport default AddTask;","map":{"version":3,"sources":["E:/Academics/FSE/JK/application-ui-master/application-ui-master/src/assets/components/task/AddTask.jsx"],"names":["React","Component","Button","Form","FormGroup","Label","Input","Col","Modal","ModalHeader","ModalBody","Row","ModalFooter","Spinner","Alert","ListGroup","ListGroupItem","request","format","addDays","differenceInCalendarDays","AddTask","props","currentDate","Date","nextDate","labels","state","taskList","projectsList","userAction","userList","parentTaskList","projectName","priority","currentTask","projectModal","userModal","taskModal","formError","parentTask","showLoadingModal","user","console","log","additionalProps","id","projectId","taskName","task","isParentTask","startDate","endDate","userName","setState","endDateValidationError","projectNameInvalid","e","toggleProjectModal","className","length","map","project","assignProject","focus","taskNameInvalid","handleChange","parentTaskSelector","priorityInvalid","onPriorityChange","parentTaskName","toggleTaskModal","assignTask","startDateInvalid","endDateInvalid","firstName","userIdInvalid","toggleUserModal","assignUser","lastName","size","offset","addOrEditTask","reset","name","prop","prevState","parentTaskId","target","value","projectIdInvalid","validateForm","parentId","userId","status","dis","post","url","json","err","httpResponse","body","addUserResponse","currentUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Task.css';\nimport {\n    Button, Form, FormGroup, Label, Input, Col,\n    Modal, ModalHeader, ModalBody, Row, ModalFooter,Spinner, Alert,\n    ListGroup, ListGroupItem\n} from 'reactstrap';\nimport request from 'request';\nimport { format, addDays, differenceInCalendarDays } from 'date-fns';\n\nclass AddTask extends Component {\n\n    constructor(props) {\n        super(props);\n        const currentDate = format(new Date(), 'YYYY-MM-DD');\n        const nextDate = format(addDays(new Date(), 1), 'YYYY-MM-DD');\n        const labels = {\n            'addTask': 'Add Task',\n            'editTask': 'Edit Task'\n        };\n        this.state = {\n            taskList: props.taskList || [],\n            projectsList: props.projectsList || [],\n            userAction: props.userAction || 'addTask',\n            userList: props.userList || [],\n            parentTaskList: props.parentTaskList || [],\n            projectName: '',\n            priority: 0,\n            currentTask: {},\n            projectModal: false,\n            userModal: false,\n            taskModal: false,\n            formError: false,\n            parentTask: {},\n            labels: labels,\n            currentDate: currentDate,\n            nextDate: nextDate,\n            showLoadingModal: false,\n            user: {}\n        }\n    }\n\n    componentWillReceiveProps(props) {\n        console.log(\"Next set of props\")\n        console.log(props)\n        let currentTask = props.currentTask;\n        let additionalProps = {}\n        if (currentTask) {\n            additionalProps = {\n                id: currentTask.id || '',\n                projectName: currentTask.projectName || '',\n                projectId: currentTask.projectId,\n                taskName: currentTask.task,\n                priority: currentTask.priority,\n                isParentTask: currentTask.isParentTask,\n                parentTask: currentTask.parentTask,\n                startDate: currentTask.startDate || '',\n                endDate: currentTask.endDate || '',\n                user: { 'firstName': currentTask.userName }\n            }\n        }\n        this.setState({\n            userList: props.userList,\n            taskList: props.taskList,\n            projectsList: props.projectsList,\n            parentTaskList: props.parentTaskList,\n            userAction: props.userAction || 'addTask',\n            ...additionalProps\n        });\n\n    }\n\n    render() {\n        return (\n            <div className=\"form-section\">\n                <Form>\n                    {this.state.formError &&\n                        <FormGroup row>\n                            <Col sm={12}><Alert color=\"danger\">All Fields are required!</Alert></Col>\n                        </FormGroup>\n                    }\n                    {this.state.endDateValidationError &&\n                        <FormGroup row>\n                            <Col sm={12}><Alert color=\"danger\">End date cannot be earlier or same as start date</Alert></Col>\n                        </FormGroup>\n                    }\n                    <FormGroup row>\n                        <Label for=\"projectName\" sm={3}>Project:</Label>\n                        <Col sm={6}>\n                            <Input type=\"text\" value={this.state.projectName} disabled invalid={this.state.projectNameInvalid} />\n                        </Col>\n                        <Col sm={3}>\n                            <Button onClick={e => this.toggleProjectModal(e)}>Search</Button>\n                            <Modal id='projectModal' isOpen={this.state.projectModal} toggle={() => this.toggleProjectModal()} className={this.props.className}>\n                                <ModalHeader toggle={() => this.toggleProjectModal()}>Select Project</ModalHeader>\n                                <ModalBody>\n                                    <ListGroup>\n                                        {this.state.projectsList && this.state.projectsList.length > 0 ?\n                                            this.state.projectsList.map(\n                                                project => {\n                                                    return (\n                                                        <ListGroupItem tag=\"button\" action onClick={() => this.assignProject(project)}>{project.projectName}</ListGroupItem>\n                                                    );\n                                                })\n                                            : <ListGroupItem disabled>Please add users to add/update projects</ListGroupItem>}\n                                    </ListGroup>\n                                </ModalBody>\n                                <ModalFooter>\n                                    <Button color=\"secondary\" onClick={() => this.toggleProjectModal()}>Cancel</Button>\n                                </ModalFooter>\n                            </Modal>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"startEnd\" sm={3}>Task: </Label>\n                        <Col sm={9}>\n                            <Input type=\"text\" value={this.state.taskName} onFocus={e => this.focus(\"taskName\", e)}\n                                invalid={this.state.taskNameInvalid} onChange={e => this.handleChange(\"taskName\", e)} />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n\n                        <Label for=\"startEnd\" sm={3}>Is Parent Task: </Label>\n                        <Col sm={9}>\n                            <Label check>\n                                <Input type=\"checkbox\" checked={this.state.isParentTask} onChange={e => this.parentTaskSelector(e)} />{' '}\n                                Parent Task\n                            </Label>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"priority\" sm={2}>Priority:</Label>\n                        <Col sm={10}>\n\n                            <Input type=\"range\" min=\"1\" max=\"30\" invalid={this.state.priorityInvalid}\n                                value={this.state.priority} class=\"slider\"\n                                onFocus={e => this.focus(\"priority\", e)}\n                                onChange={(e) => this.onPriorityChange(e)} />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"parentTask\" sm={3}>Parent Task:</Label>\n                        <Col sm={6}>\n                            <Input type=\"text\" value={this.state.parentTaskName} disabled />\n                        </Col>\n                        <Col sm={3}>\n                            <Button onClick={e => this.toggleTaskModal(e)}>Search</Button>\n                            <Modal id='taskModal' isOpen={this.state.taskModal} toggle={() => this.toggleTaskModal()} className={this.props.className}>\n                                <ModalHeader toggle={() => this.toggleTaskModal()}>Select Parent Task</ModalHeader>\n                                <ModalBody>\n                                    <ListGroup>\n                                        {this.state.parentTaskList && this.state.parentTaskList.length > 0 ?\n                                            this.state.parentTaskList.map(\n                                                task => {\n                                                    return (\n                                                        <ListGroupItem tag=\"button\" action onClick={() => this.assignTask(task)}>{task.parentTask}</ListGroupItem>\n                                                    );\n\n                                                })\n                                            : <ListGroupItem disabled>Please add Tasks</ListGroupItem>}\n                                    </ListGroup>\n                                </ModalBody>\n                                <ModalFooter>\n                                    <Button color=\"secondary\" onClick={() => this.toggleTaskModal()}>Cancel</Button>\n                                </ModalFooter>\n                            </Modal>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"startDate\" sm={2}>Start Date:</Label>\n                        <Col sm={4}>\n                            <Input\n                                type=\"date\"\n                                name=\"startDate\"\n                                id=\"startDate\"\n                                placeholder=\"Start Date\"\n                                disabled={this.state.isParentTask}\n                                invalid={this.state.startDateInvalid}\n                                min={this.state.currentDate}\n                                value={this.state.startDate}\n                                onFocus={e => this.focus(\"startDate\", e)}\n                                onChange={e => this.handleChange(\"startDate\", e)}\n                            />\n                        </Col>\n                        <Label for=\"endDate\" sm={2}>End Date:</Label>\n                        <Col sm={4}>\n                            <Input\n                                type=\"date\"\n                                name=\"endData\"\n                                id=\"endData\"\n                                placeholder=\"End Date\"\n                                disabled={this.state.isParentTask}\n                                invalid={this.state.endDateInvalid}\n                                min={this.state.nextDate}\n                                value={this.state.endDate}\n                                onFocus={e => this.focus(\"endDate\", e)}\n                                onChange={e => this.handleChange(\"endDate\", e)}\n                            />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"user\" sm={3}>User:</Label>\n                        <Col sm={6}>\n                            <Input type=\"text\" value={this.state.user.firstName} invalid={this.state.userIdInvalid} disabled />\n                        </Col>\n                        <Col sm={3}>\n                            <Button onClick={e => this.toggleUserModal(e)}>Search</Button>\n                            <Modal id='userModal' isOpen={this.state.userModal} toggle={() => this.toggleUserModal()} className={this.props.className}>\n                                <ModalHeader toggle={() => this.toggleUserModal()}>Select User</ModalHeader>\n                                <ModalBody>\n                                    <ListGroup>\n                                        {this.state.userList && this.state.userList.length > 0 ?\n                                            this.state.userList.map(\n                                                user => {\n                                                    return (\n                                                        <ListGroupItem tag=\"button\" action onClick={() => this.assignUser(user)}>{user.firstName + ' ' + user.lastName}</ListGroupItem>\n                                                    );\n                                                })\n                                            : <ListGroupItem disabled>Please add Tasks</ListGroupItem>}\n                                    </ListGroup>\n                                </ModalBody>\n                                <ModalFooter>\n                                    <Button color=\"secondary\" onClick={() => this.toggleUserModal()}>Cancel</Button>\n                                </ModalFooter>\n                            </Modal>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup check row>\n                        <Col sm={{ size: 12, offset: 9 }}>\n                            <Button onClick={e => this.addOrEditTask(e, this.state.userAction)}>{this.state.labels[this.state.userAction]}</Button>{' '}\n                            <Button className=\"secondary\" onClick={e => this.reset(e)}>Reset</Button>\n                        </Col>\n                    </FormGroup>\n                </Form>\n                <Modal isOpen={this.state.showLoadingModal}>\n                    <ModalBody>\n                        <Row>\n                            <Spinner color=\"dark\" />\n                        </Row>\n                        <Row>\n                            <p>Saving user action. Please wait...</p>\n                        </Row>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n\n    focus(name) {\n        const prop = name + \"Invalid\"\n        this.setState({\n            [prop]: false\n        });\n        if (name == 'endDate') {\n            this.setState({\n                endDateValidationError: false\n            });\n        }\n    }\n\n    parentTaskSelector() {\n        const prevState = this.state.isParentTask;\n        this.setState(({\n            isParentTask: !prevState\n        }));\n        const currentDate = this.state.currentDate;\n        const nextDate = this.state.nextDate;\n        if (prevState) {\n            this.setState(({\n                startDate: currentDate,\n                endDate: nextDate\n            }));\n        }\n    }\n\n    assignUser(user) {\n        this.setState(prevState => ({\n            user: user,\n            userModal: !prevState.userModal,\n            userIdInvalid: false\n        }));\n    }\n\n    assignProject(project) {\n        this.setState(prevState => ({\n            projectId: project.id,\n            projectName: project.projectName,\n            projectModal: !prevState.projectModal,\n            projectNameInvalid: false\n        }));\n    }\n\n    assignTask(task) {\n        this.setState(prevState => ({\n            parentTask: task,\n            parentTaskId: task.id,\n            parentTaskName: task.parentTask,\n            taskModal: !prevState.taskModal,\n            taskNameInvalid: false\n        }));\n    }\n\n\n    toggleTaskModal() {\n        this.setState(prevState => ({\n            taskModal: !prevState.taskModal\n        }));\n    }\n\n    toggleProjectModal() {\n        this.setState(prevState => ({\n            projectModal: !prevState.projectModal\n        }));\n    }\n\n    toggleUserModal() {\n        this.setState(prevState => ({\n            userModal: !prevState.userModal\n        }));\n    }\n\n    onPriorityChange(e) {\n        this.setState({\n            priority: e.target.value\n        });\n    }\n\n    reset(e) {\n        this.setState({\n            projectName: '',\n            taskName: '',\n            priority: 0,\n            isParentTask: false,\n            parentTask: {},\n            startDate: '',\n            endDate: '',\n            formError: false,\n            user: {\n                firstName: ''\n            },\n            parentTaskName: '',\n            projectIdInvalid: false,\n            taskNameInvalid: false,\n            priorityInvalid: false,\n            formError: false,\n            endDateValidationError: false,\n            startDateInvalid: false,\n            endDateInvalid: false,\n            userIdInvalid: false\n        })\n    }\n\n    addOrEditTask(e, userAction) {\n        console.log(e);\n        console.log(userAction)\n\n        if (this.validateForm()) {\n            return;\n        }\n\n        const task = {\n            projectId: this.state.projectId,\n            task: this.state.taskName,\n            priority: this.state.priority,\n            isParentTask: this.state.isParentTask,\n            parentId: this.state.parentTaskId,\n            startDate: this.state.startDate,\n            endDate: this.state.endDate,\n            userId: this.state.user.id\n        };\n        if (userAction === 'addTask') {\n            task.id = null; // Will get added in server side\n            task.status = \"New\";\n        }\n        if (task.isParentTask) {\n            task.parentId = null; // Will get added in server side\n        }\n\n        var dis = this;\n        this.setState({\n            showLoadingModal: true\n        });\n        request.post(\n            {\n                url: 'http://localhost:3000/spi/task/addUpdate',\n                json: task\n            },\n            function (err, httpResponse, body) {\n                console.log(body);\n                dis.setState({\n                    taskList: body,\n                    addUserResponse: {\n                        status: 'success'\n                    },\n                    currentUser: {},\n                    userAction: 'addTask',\n                    showLoadingModal: false\n                });\n                dis.props.addOrEditTask(userAction, body);\n            }\n        );\n\n        // TODO - validation\n        console.log(task);\n        this.reset();\n    }\n\n    validateForm() {\n        let formError = false;\n        const projectId = this.state.projectId;\n        const taskName = this.state.taskName;\n        const priority = this.state.priority;\n        const isParentTask = this.state.isParentTask;\n        const parentTaskId = this.state.parentTaskId;\n        const startDate = this.state.startDate;\n        const endDate = this.state.endDate;\n        const userId = this.state.user.id\n        if (!projectId || !taskName || !priority) {\n            formError = true;\n            this.setState({\n                formError: formError,\n                projectIdInvalid: projectId ? false : true,\n                taskNameInvalid: taskName ? false : true,\n                priorityInvalid: priority ? false : true\n            });\n        }\n        if (!isParentTask) {\n            if (!startDate || !endDate || !userId) {\n                formError = true;\n                this.setState({\n                    formError: formError,\n                    startDateInvalid: startDate ? false : true,\n                    endDateInvalid: endDate ? false : true,\n                    userIdInvalid: userId ? false : true\n                });\n            } else if (startDate && endDate) {\n                if (differenceInCalendarDays(endDate, startDate) < 1) {\n                    formError = true;\n                    this.setState({\n                        endDateValidationError: true\n                    });\n                }\n            }\n        }\n        return formError;\n    }\n\n    handleChange(name, e) {\n        this.setState({\n            [name]: e.target.value\n        });\n    }\n\n}\n\nexport default AddTask;\n"]},"metadata":{},"sourceType":"module"}