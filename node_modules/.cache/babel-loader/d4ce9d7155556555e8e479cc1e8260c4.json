{"ast":null,"code":"import _defineProperty from \"E:\\\\Academics\\\\FSE\\\\JK\\\\application-ui-master\\\\application-ui-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"E:\\\\Academics\\\\FSE\\\\JK\\\\application-ui-master\\\\application-ui-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Academics\\\\FSE\\\\JK\\\\application-ui-master\\\\application-ui-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Academics\\\\FSE\\\\JK\\\\application-ui-master\\\\application-ui-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Academics\\\\FSE\\\\JK\\\\application-ui-master\\\\application-ui-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Academics\\\\FSE\\\\JK\\\\application-ui-master\\\\application-ui-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Academics\\\\FSE\\\\JK\\\\application-ui-master\\\\application-ui-master\\\\src\\\\assets\\\\components\\\\project\\\\Project.jsx\";\nimport React, { Component } from 'react';\nimport './Project.css';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport 'react-rangeslider/lib/index.css';\nimport AddProject from './AddProject';\nimport ViewProjects from './ViewProjects';\nimport request from 'request';\nimport { Row, Modal, ModalBody, Spinner } from 'reactstrap';\n\nvar Project =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Project, _Component);\n\n  function Project(props) {\n    var _this;\n\n    _classCallCheck(this, Project);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Project).call(this, props));\n    _this.state = _defineProperty({\n      userAction: props.userAction || 'addProject',\n      userList: props.userList,\n      currentProject: props.currentProject || {},\n      projectsList: props.projectsList || []\n    }, \"userAction\", '');\n    return _this;\n  }\n\n  _createClass(Project, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      console.log(\"Next set of props\");\n      console.log(nextProps);\n      this.setState({\n        userList: nextProps.userList || [],\n        projectsList: nextProps.projectsList || []\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"addproject-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(AddProject, {\n        userList: this.state.userList,\n        currentProject: this.state.currentProject,\n        addProject: function addProject(userAction, projectDetails) {\n          return _this2.addProject(userAction, projectDetails);\n        },\n        userAction: this.state.userAction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"addproject-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(ViewProjects, {\n        projectsList: this.state.projectsList,\n        updateProject: function updateProject(project) {\n          return _this2.updateProject(project);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(Modal, {\n        isOpen: this.state.showLoadingModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        color: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Saving user action. Please wait...\")))));\n    }\n  }, {\n    key: \"addProject\",\n    value: function addProject(userAction, projectDetails) {\n      var projectsList = this.state.projectsList; // if (userAction === 'addProject') {\n      //     projectsList.push(projectDetails);\n      // } else if (userAction === 'updateProject') {\n      //     projectsList.map(project => {\n      //         if (project.id == projectDetails.id) {\n      //             project.projectName = projectDetails.projectName;\n      //             project.priority = projectDetails.priority;\n      //             project.managerName = projectDetails.managerName;\n      //             project.managerId = projectDetails.managerId;\n      //             project.startDate = projectDetails.startDate;\n      //             project.endDate = projectDetails.endDate;\n      //             return project;\n      //         }\n      //     });\n      // }\n\n      this.setState({\n        showLoadingModal: true\n      });\n      var dis = this;\n      request.post({\n        url: 'http://localhost:3000/spi/projects/addUpdate',\n        json: projectDetails\n      }, function (err, httpResponse, body) {\n        console.log(body);\n        dis.setState({\n          projectsList: body,\n          currentProject: {},\n          userAction: '',\n          showLoadingModal: false\n        });\n        dis.props.addProject(body);\n      });\n    }\n  }, {\n    key: \"updateProject\",\n    value: function updateProject(project) {\n      this.setState({\n        currentProject: project,\n        userAction: 'updateProject'\n      });\n    }\n  }]);\n\n  return Project;\n}(Component);\n\nexport default Project;","map":{"version":3,"sources":["E:/Academics/FSE/JK/application-ui-master/application-ui-master/src/assets/components/project/Project.jsx"],"names":["React","Component","ListGroup","ListGroupItem","AddProject","ViewProjects","request","Row","Modal","ModalBody","Spinner","Project","props","state","userAction","userList","currentProject","projectsList","nextProps","console","log","setState","projectDetails","addProject","project","updateProject","showLoadingModal","dis","post","url","json","err","httpResponse","body"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Project.css';\nimport {\n    ListGroup, ListGroupItem\n} from 'reactstrap';\nimport 'react-rangeslider/lib/index.css';\nimport AddProject from './AddProject';\nimport ViewProjects from './ViewProjects';\nimport request from 'request';\nimport {\n    Row,\n    Modal, ModalBody, Spinner\n} from 'reactstrap';\n\nclass Project extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userAction: props.userAction || 'addProject',\n            userList: props.userList,\n            currentProject: props.currentProject || {},\n            projectsList: props.projectsList || [],\n            userAction: ''\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        console.log(\"Next set of props\")\n        console.log(nextProps)\n        this.setState({\n            userList: nextProps.userList || [],\n            projectsList: nextProps.projectsList || []\n        });\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"addproject-section\">\n                    <AddProject userList={this.state.userList} currentProject={this.state.currentProject}\n                        addProject={(userAction, projectDetails) => this.addProject(userAction, projectDetails)}\n                        userAction={this.state.userAction} />\n                </div>\n                <div className=\"addproject-divider\">\n\n                </div>\n                <div>\n                    <ViewProjects projectsList={this.state.projectsList} updateProject={(project) => this.updateProject(project)} />\n                </div>\n                <Modal isOpen={this.state.showLoadingModal}>\n                    <ModalBody>\n                        <Row>\n                            <Spinner color=\"dark\" />\n                        </Row>\n                        <Row>\n                            <p>Saving user action. Please wait...</p>\n                        </Row>\n\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n\n    addProject(userAction, projectDetails) {\n        let projectsList = this.state.projectsList;\n        // if (userAction === 'addProject') {\n        //     projectsList.push(projectDetails);\n        // } else if (userAction === 'updateProject') {\n        //     projectsList.map(project => {\n        //         if (project.id == projectDetails.id) {\n        //             project.projectName = projectDetails.projectName;\n        //             project.priority = projectDetails.priority;\n        //             project.managerName = projectDetails.managerName;\n        //             project.managerId = projectDetails.managerId;\n        //             project.startDate = projectDetails.startDate;\n        //             project.endDate = projectDetails.endDate;\n        //             return project;\n        //         }\n        //     });\n        // }\n        this.setState({\n            showLoadingModal: true\n        });\n        var dis = this;\n        request.post(\n            {\n                url: 'http://localhost:3000/spi/projects/addUpdate',\n                json: projectDetails\n            },\n            function (err, httpResponse, body) {\n                console.log(body);\n                dis.setState({\n                    projectsList: body,\n                    currentProject: {},\n                    userAction: '',\n                    showLoadingModal: false\n                });\n                dis.props.addProject(body);\n            }\n        );\n\n    }\n\n    updateProject(project) {\n        this.setState({\n            currentProject: project,\n            userAction: 'updateProject'\n        });\n    }\n\n}\n\nexport default Project;\n"]},"metadata":{},"sourceType":"module"}